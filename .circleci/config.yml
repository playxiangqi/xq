version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.4.0
  aws-ecr: circleci/aws-ecr@6.15.3
  aws-ecs: circleci/aws-ecs@2.0.0
  codecov: circleci/codecov@1.1.3

jobs:
  portal:
    docker:
      - image: circleci/elixir:1.11.2
      - image: circleci/postgres:12-alpine-ram
    environment:
      MIX_ENV: test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: xq_dev
    working_directory: ~/xq/xq_portal
    steps:
      - checkout:
          path: ~/xq
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - restore_cache:
          keys:
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache
      - run: mix do deps.get, compile
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"
      - run:
          name: Wait for Postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: mix coveralls.json --trace
      - store_test_results:
          path: _build/test/xq
      - run: cp ~/codecov.yml .
      - codecov/upload:
          file: cover/excoveralls.json
          flags: portal

  deploy-docker-ecr:
    parameters:
      deploy-env:
        description: Deployment tier/stage
        type: string
    executor: aws-cli/default
    environment:
      AWS_ECR_URL: ${AWS_ECR_ACCOUNT_URL}/playxiangqi/xq
    steps:
      - checkout
      - aws-cli/setup
      - setup_remote_docker:
          version: 19.03.13
      - aws-ecr/ecr-login
      - run:
          name: Build Docker Image
          command: |
            make docker-<< parameters.deploy-env >>
      - run:
          name: Deploy Docker Image
          command: make push-<< parameters.deploy-env >>

  deploy-ecs-update:
    parameters:
      deploy-env:
        description: Deployment tier/stage
        type: string
    executor: aws-cli/default
    steps:
      - aws-cli/setup
      - aws-ecs/update-service:
          family: << parameters.deploy-env >>-xq-task
          cluster-name: << parameters.deploy-env >>-xq-cluster
          service-name: << parameters.deploy-env >>-xq-service
          force-new-deployment: true

workflows:
  dev-build-and-deploy:
    jobs:
      - portal:
          filters:
            tags:
              only: /.*/

      - deploy-docker-ecr:
          name: dev-deploy-docker-ecr
          context: AWS
          deploy-env: dev
          requires:
            - portal
          filters:
            branches:
              only: master

      - deploy-ecs-update:
          name: dev-deploy-ecs-update
          context: AWS
          deploy-env: dev
          requires:
            - dev-deploy-docker-ecr
          filters:
            branches:
              only: master
